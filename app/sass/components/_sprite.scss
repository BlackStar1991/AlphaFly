// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$body-clothes-name: 'body-clothes';
$body-clothes-x: 0px;
$body-clothes-y: 261px;
$body-clothes-offset-x: 0px;
$body-clothes-offset-y: -261px;
$body-clothes-width: 146px;
$body-clothes-height: 399px;
$body-clothes-total-width: 741px;
$body-clothes-total-height: 660px;
$body-clothes-image: '../image/sprite.png';
$body-clothes: (0px, 261px, 0px, -261px, 146px, 399px, 741px, 660px, '../image/sprite.png', 'body-clothes', );
$elem-chest-name: 'elem-chest';
$elem-chest-x: 562px;
$elem-chest-y: 368px;
$elem-chest-offset-x: -562px;
$elem-chest-offset-y: -368px;
$elem-chest-width: 114px;
$elem-chest-height: 41px;
$elem-chest-total-width: 741px;
$elem-chest-total-height: 660px;
$elem-chest-image: '../image/sprite.png';
$elem-chest: (562px, 368px, -562px, -368px, 114px, 41px, 741px, 660px, '../image/sprite.png', 'elem-chest', );
$elem-hip-name: 'elem-hip';
$elem-hip-x: 562px;
$elem-hip-y: 414px;
$elem-hip-offset-x: -562px;
$elem-hip-offset-y: -414px;
$elem-hip-width: 114px;
$elem-hip-height: 41px;
$elem-hip-total-width: 741px;
$elem-hip-total-height: 660px;
$elem-hip-image: '../image/sprite.png';
$elem-hip: (562px, 414px, -562px, -414px, 114px, 41px, 741px, 660px, '../image/sprite.png', 'elem-hip', );
$elem-neck-name: 'elem-neck';
$elem-neck-x: 681px;
$elem-neck-y: 414px;
$elem-neck-offset-x: -681px;
$elem-neck-offset-y: -414px;
$elem-neck-width: 52px;
$elem-neck-height: 7px;
$elem-neck-total-width: 741px;
$elem-neck-total-height: 660px;
$elem-neck-image: '../image/sprite.png';
$elem-neck: (681px, 414px, -681px, -414px, 52px, 7px, 741px, 660px, '../image/sprite.png', 'elem-neck', );
$elem-sleeve-name: 'elem-sleeve';
$elem-sleeve-x: 562px;
$elem-sleeve-y: 506px;
$elem-sleeve-offset-x: -562px;
$elem-sleeve-offset-y: -506px;
$elem-sleeve-width: 23px;
$elem-sleeve-height: 127px;
$elem-sleeve-total-width: 741px;
$elem-sleeve-total-height: 660px;
$elem-sleeve-image: '../image/sprite.png';
$elem-sleeve: (562px, 506px, -562px, -506px, 23px, 127px, 741px, 660px, '../image/sprite.png', 'elem-sleeve', );
$elem-waist-name: 'elem-waist';
$elem-waist-x: 562px;
$elem-waist-y: 460px;
$elem-waist-offset-x: -562px;
$elem-waist-offset-y: -460px;
$elem-waist-width: 111px;
$elem-waist-height: 41px;
$elem-waist-total-width: 741px;
$elem-waist-total-height: 660px;
$elem-waist-image: '../image/sprite.png';
$elem-waist: (562px, 460px, -562px, -460px, 111px, 41px, 741px, 660px, '../image/sprite.png', 'elem-waist', );
$icon-star-small-name: 'icon-star-small';
$icon-star-small-x: 721px;
$icon-star-small-y: 368px;
$icon-star-small-offset-x: -721px;
$icon-star-small-offset-y: -368px;
$icon-star-small-width: 11px;
$icon-star-small-height: 10px;
$icon-star-small-total-width: 741px;
$icon-star-small-total-height: 660px;
$icon-star-small-image: '../image/sprite.png';
$icon-star-small: (721px, 368px, -721px, -368px, 11px, 10px, 741px, 660px, '../image/sprite.png', 'icon-star-small', );
$icon-tree-lines-name: 'icon-treeLines';
$icon-tree-lines-x: 681px;
$icon-tree-lines-y: 368px;
$icon-tree-lines-offset-x: -681px;
$icon-tree-lines-offset-y: -368px;
$icon-tree-lines-width: 35px;
$icon-tree-lines-height: 30px;
$icon-tree-lines-total-width: 741px;
$icon-tree-lines-total-height: 660px;
$icon-tree-lines-image: '../image/sprite.png';
$icon-tree-lines: (681px, 368px, -681px, -368px, 35px, 30px, 741px, 660px, '../image/sprite.png', 'icon-treeLines', );
$laib-100proc-name: 'laib-100proc';
$laib-100proc-x: 377px;
$laib-100proc-y: 261px;
$laib-100proc-offset-x: -377px;
$laib-100proc-offset-y: -261px;
$laib-100proc-width: 179px;
$laib-100proc-height: 179px;
$laib-100proc-total-width: 741px;
$laib-100proc-total-height: 660px;
$laib-100proc-image: '../image/sprite.png';
$laib-100proc: (377px, 261px, -377px, -261px, 179px, 179px, 741px, 660px, '../image/sprite.png', 'laib-100proc', );
$laib-free-delivery-name: 'laib-freeDelivery';
$laib-free-delivery-x: 562px;
$laib-free-delivery-y: 0px;
$laib-free-delivery-offset-x: -562px;
$laib-free-delivery-offset-y: 0px;
$laib-free-delivery-width: 179px;
$laib-free-delivery-height: 179px;
$laib-free-delivery-total-width: 741px;
$laib-free-delivery-total-height: 660px;
$laib-free-delivery-image: '../image/sprite.png';
$laib-free-delivery: (562px, 0px, -562px, 0px, 179px, 179px, 741px, 660px, '../image/sprite.png', 'laib-freeDelivery', );
$laib-showroom-name: 'laib-showroom';
$laib-showroom-x: 562px;
$laib-showroom-y: 184px;
$laib-showroom-offset-x: -562px;
$laib-showroom-offset-y: -184px;
$laib-showroom-width: 179px;
$laib-showroom-height: 179px;
$laib-showroom-total-width: 741px;
$laib-showroom-total-height: 660px;
$laib-showroom-image: '../image/sprite.png';
$laib-showroom: (562px, 184px, -562px, -184px, 179px, 179px, 741px, 660px, '../image/sprite.png', 'laib-showroom', );
$stamp-delivery-name: 'stamp-delivery';
$stamp-delivery-x: 281px;
$stamp-delivery-y: 0px;
$stamp-delivery-offset-x: -281px;
$stamp-delivery-offset-y: 0px;
$stamp-delivery-width: 276px;
$stamp-delivery-height: 256px;
$stamp-delivery-total-width: 741px;
$stamp-delivery-total-height: 660px;
$stamp-delivery-image: '../image/sprite.png';
$stamp-delivery: (281px, 0px, -281px, 0px, 276px, 256px, 741px, 660px, '../image/sprite.png', 'stamp-delivery', );
$stamp-origin-name: 'stamp-origin';
$stamp-origin-x: 0px;
$stamp-origin-y: 0px;
$stamp-origin-offset-x: 0px;
$stamp-origin-offset-y: 0px;
$stamp-origin-width: 276px;
$stamp-origin-height: 256px;
$stamp-origin-total-width: 741px;
$stamp-origin-total-height: 660px;
$stamp-origin-image: '../image/sprite.png';
$stamp-origin: (0px, 0px, 0px, 0px, 276px, 256px, 741px, 660px, '../image/sprite.png', 'stamp-origin', );
$stamp-showroom-name: 'stamp-showroom';
$stamp-showroom-x: 151px;
$stamp-showroom-y: 261px;
$stamp-showroom-offset-x: -151px;
$stamp-showroom-offset-y: -261px;
$stamp-showroom-width: 221px;
$stamp-showroom-height: 218px;
$stamp-showroom-total-width: 741px;
$stamp-showroom-total-height: 660px;
$stamp-showroom-image: '../image/sprite.png';
$stamp-showroom: (151px, 261px, -151px, -261px, 221px, 218px, 741px, 660px, '../image/sprite.png', 'stamp-showroom', );
$spritesheet-width: 741px;
$spritesheet-height: 660px;
$spritesheet-image: '../image/sprite.png';
$spritesheet-sprites: ($body-clothes, $elem-chest, $elem-hip, $elem-neck, $elem-sleeve, $elem-waist, $icon-star-small, $icon-tree-lines, $laib-100proc, $laib-free-delivery, $laib-showroom, $stamp-delivery, $stamp-origin, $stamp-showroom, );
$spritesheet: (741px, 660px, '../image/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
